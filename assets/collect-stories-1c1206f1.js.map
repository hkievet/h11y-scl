{"version":3,"file":"collect-stories-1c1206f1.js","sources":["../../node_modules/@storybook/addon-svelte-csf/dist/cjs/components/context.js","../../node_modules/@storybook/addon-svelte-csf/dist/cjs/components/Meta.svelte","../../node_modules/@storybook/addon-svelte-csf/dist/cjs/components/Story.svelte","../../node_modules/@storybook/addon-svelte-csf/dist/cjs/components/Template.svelte","../../node_modules/@storybook/addon-svelte-csf/dist/cjs/index.js","../../node_modules/@storybook/addon-svelte-csf/dist/esm/parser/extract-id.js","../../node_modules/@storybook/addon-svelte-csf/dist/esm/components/context.js","../../node_modules/@storybook/addon-svelte-csf/dist/esm/components/RegisterContext.svelte","../../node_modules/@storybook/addon-svelte-csf/dist/esm/components/RenderContext.svelte","../../node_modules/@storybook/addon-svelte-csf/dist/esm/parser/collect-stories.js"],"sourcesContent":["import { getContext, hasContext, setContext } from \"svelte\";\nconst CONTEXT_KEY = \"storybook-registration-context\";\nexport function createRenderContext(props = {}) {\n  setContext(CONTEXT_KEY, {\n    render: true,\n    register: () => {},\n    meta: {},\n    args: {},\n    ...props\n  });\n}\nexport function createRegistrationContext(repositories) {\n  setContext(CONTEXT_KEY, {\n    render: false,\n    register: story => {\n      repositories.stories.push(story);\n    },\n\n    set meta(value) {\n      // eslint-disable-next-line no-param-reassign\n      repositories.meta = value;\n    },\n\n    args: {}\n  });\n}\nexport function useContext() {\n  if (!hasContext(CONTEXT_KEY)) {\n    createRenderContext();\n  }\n\n  return getContext(CONTEXT_KEY);\n}","<script>\n  import { useContext } from './context';\n\n  useContext().meta = $$props;\n</script>\n\n","<script>\n  import { useContext } from './context';\n\n  const context = useContext();\n\n  export let name;\n  export let template = null;\n\n  if (!name) {\n    throw new Error('Missing Story name');\n  }\n\n  context.register({\n    name,\n    ...$$restProps, \n    template: template != null ? template : !$$slots.default ? 'default' : null,\n  });\n\n  $: render = context.render && !context.templateName && context.storyName == name;\n\n</script>\n\n{#if render}\n  <slot {...context.args} context={context.storyContext} args={context.args}/>\n{/if}\n","<script>\n  import { useContext } from './context';\n\n  const context = useContext();\n\n  export let id = 'default';\n\n  context.register({id, isTemplate: true});\n\n  $: render = context.render && context.templateId === id;\n</script>\n\n{#if render}\n  <slot {...context.args} context={context.storyContext} args={context.args}/>\n{/if}\n","export { default as Meta } from './components/Meta.svelte';\nexport { default as Story } from './components/Story.svelte';\nexport { default as Template } from './components/Template.svelte';\n\nif (module && module.hot && module.hot.decline) {\n  module.hot.decline();\n} // make it work with --isolatedModules\n\n\nexport default {};","import { logger } from '@storybook/client-logger';\n\nfunction hashCode(str) {\n  const h = str.split('') // eslint-disable-next-line no-bitwise\n  .reduce((prevHash, currVal) => (prevHash << 5) - prevHash + currVal.charCodeAt(0) | 0, 0);\n  return Math.abs(h).toString(16);\n} // extract a story id\n\n\nexport function extractId({\n  id,\n  name\n}, allocatedIds = []) {\n  if (id) {\n    return id;\n  }\n\n  if (!name) {\n    throw new Error(\"Id or Name should be specified\");\n  }\n\n  let generated = name.replace(/\\W+(.|$)/g, (_, chr) => chr.toUpperCase());\n\n  if (allocatedIds.indexOf(generated) >= 0) {\n    logger.warn(`Story name conflict with exports - Please add an explicit id for story ${name}`);\n    generated += hashCode(name);\n  }\n\n  return generated;\n}","import { getContext, hasContext, setContext } from \"svelte\";\nconst CONTEXT_KEY = \"storybook-registration-context\";\nexport function createRenderContext(props = {}) {\n  setContext(CONTEXT_KEY, {\n    render: true,\n    register: () => {},\n    meta: {},\n    args: {},\n    ...props\n  });\n}\nexport function createRegistrationContext(repositories) {\n  setContext(CONTEXT_KEY, {\n    render: false,\n    register: story => {\n      repositories.stories.push(story);\n    },\n\n    set meta(value) {\n      // eslint-disable-next-line no-param-reassign\n      repositories.meta = value;\n    },\n\n    args: {}\n  });\n}\nexport function useContext() {\n  if (!hasContext(CONTEXT_KEY)) {\n    createRenderContext();\n  }\n\n  return getContext(CONTEXT_KEY);\n}","<script>\n  import { createRegistrationContext } from './context';\n\n  export let Stories;\n  export let repositories;\n\n  createRegistrationContext(repositories);\n\n</script>\n\n<svelte:component this={Stories} />\n","<script>\n  /**\n   * @component\n   * @wrapper\n   */\n  import { createRenderContext } from './context';\n\n  export let Stories;\n\n  createRenderContext($$props);\n</script>\n\n<svelte:component this={Stories}/>","/* eslint-env browser */\nimport { logger } from '@storybook/client-logger';\nimport { combineParameters } from '@storybook/client-api';\nimport { extractId } from './extract-id';\nimport RegisterContext from '../components/RegisterContext.svelte';\nimport RenderContext from '../components/RenderContext.svelte';\n/* Called from a webpack loader and a jest transformation.\n *\n * It mounts a Stories component in a context which disables\n * the rendering of every <Story/> and <Template/> but instead\n * collects names and properties.\n *\n * For every discovered <Story/>, it creates a storyFn which\n * instantiate the main Stories component: Every Story but\n * the one selected is disabled.\n */\n\nconst createFragment = document.createDocumentFragment ? () => document.createDocumentFragment() : () => document.createElement('div');\nexport default ((StoriesComponent, {\n  stories = {},\n  allocatedIds\n}) => {\n  const repositories = {\n    meta: null,\n    stories: []\n  }; // extract all stories\n\n  try {\n    const context = new RegisterContext({\n      target: createFragment(),\n      props: {\n        Stories: StoriesComponent,\n        repositories\n      }\n    });\n    context.$destroy();\n  } catch (e) {\n    logger.error(`Error extracting stories ${e.toString()}`, e);\n  }\n\n  const {\n    meta\n  } = repositories;\n\n  if (!meta) {\n    logger.error('Missing <Meta/> tag');\n    return {};\n  }\n\n  const {\n    component: globalComponent\n  } = meta; // collect templates id\n\n  const templatesId = repositories.stories.filter(story => story.isTemplate).map(story => story.id); // check for duplicate templates\n\n  const duplicateTemplatesId = templatesId.filter((item, index) => templatesId.indexOf(item) !== index);\n\n  if (duplicateTemplatesId.length > 0) {\n    logger.warn(`Found duplicates templates id for stories '${meta.name}': ${duplicateTemplatesId}`);\n  }\n\n  return {\n    meta,\n    stories: repositories.stories.filter(story => !story.isTemplate).reduce((all, story) => {\n      const {\n        id,\n        name,\n        template,\n        component,\n        source = false,\n        ...props\n      } = story;\n      const storyId = extractId(story, allocatedIds);\n\n      if (!storyId) {\n        return all;\n      }\n\n      const unknownTemplate = template != null && templatesId.indexOf(template) < 0;\n\n      const storyFn = (args, storyContext) => {\n        if (unknownTemplate) {\n          throw new Error(`Story ${name} is referencing an unknown template ${template}`);\n        }\n\n        return {\n          Component: RenderContext,\n          props: {\n            Stories: StoriesComponent,\n            storyName: name,\n            templateId: template,\n            args,\n            storyContext,\n            sourceComponent: component || globalComponent\n          }\n        };\n      };\n\n      storyFn.storyName = name;\n      Object.entries(props).forEach(([k, v]) => {\n        storyFn[k] = v;\n      }); // inject story sources\n\n      const storyDef = stories[template ? `tpl:${template}` : storyId];\n      const hasArgs = storyDef ? storyDef.hasArgs : true; // inject source snippet\n\n      const rawSource = storyDef ? storyDef.source : null;\n\n      if (rawSource) {\n        storyFn.parameters = combineParameters(storyFn.parameters || {}, {\n          storySource: {\n            source: rawSource\n          }\n        });\n      }\n\n      let snippet;\n\n      if (source === true || source === false && !hasArgs) {\n        snippet = rawSource;\n      } else if (typeof source === 'string') {\n        snippet = source;\n      }\n\n      if (snippet) {\n        storyFn.parameters = combineParameters(storyFn.parameters || {}, {\n          docs: {\n            source: {\n              code: snippet\n            }\n          }\n        });\n      } // eslint-disable-next-line no-param-reassign\n\n\n      all[storyId] = storyFn;\n      return all;\n    }, {})\n  };\n});"],"names":["CONTEXT_KEY","createRenderContext","props","setContext","useContext","hasContext","getContext","$$props","ctx","create_if_block","context","name","template","$$restProps","$$slots","$$invalidate","render","id","logger","hashCode","str","h","prevHash","currVal","extractId","allocatedIds","generated","_","chr","createRegistrationContext","repositories","story","value","Stories","combineParameters","createFragment","parser","StoriesComponent","stories","RegisterContext","e","meta","globalComponent","templatesId","duplicateTemplatesId","item","index","all","component","source","storyId","unknownTemplate","storyFn","args","storyContext","RenderContext","k","v","storyDef","hasArgs","rawSource","snippet"],"mappings":"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"}